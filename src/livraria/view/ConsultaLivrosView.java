
package livraria.view;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import palavra_viva.util.ConexaoMySQL;
/**
 *
 * @author eliez
 */
public class ConsultaLivrosView extends javax.swing.JFrame {

     
    public ConsultaLivrosView() {
        initComponents();
        
        // Configura o modelo da tabela
    DefaultTableModel modelo = new DefaultTableModel();
modelo.addColumn("ID"); 
modelo.addColumn("Título do Livro");
modelo.addColumn("Autor");
modelo.addColumn("Categoria");
modelo.addColumn("Preço Máximo");

tblLivros.setModel(modelo);

    
    // Oculta a coluna do ID
        tblLivros.getColumnModel().getColumn(0).setMinWidth(0);
        tblLivros.getColumnModel().getColumn(0).setMaxWidth(0);
        tblLivros.getColumnModel().getColumn(0).setWidth(0);
    
    
    // Carrega todos os livros do banco de dados ao abrir a tela
     consultarLivrosNoBanco("", "", "", "");
    
    }
    // =====================
    // CONSULTA NO BANCO
    // =====================
    private void consultarLivrosNoBanco(String filtroTitulo, String filtroAutor, String filtroCategoria, String filtroPreco) {
        try {
            Connection conexao = ConexaoMySQL.getConexao();  

            
              StringBuilder sql = new StringBuilder("SELECT id, titulo, autor, genero AS categoria, preco FROM livro WHERE 1=1");

        if (!filtroTitulo.isEmpty()) {
            sql.append(" AND titulo LIKE ?");
        }
        if (!filtroAutor.isEmpty()) {
            sql.append(" AND autor LIKE ?");
        }
        if (!filtroCategoria.isEmpty()) {
            sql.append(" AND genero LIKE ?");
        }
        if (!filtroPreco.isEmpty()) {
            if (filtroPreco.contains(".")) {
                sql.append(" AND preco = ?");
            } else {
                sql.append(" AND preco LIKE ?");
            }
        }

        PreparedStatement stmt = conexao.prepareStatement(sql.toString());

        int paramIndex = 1;
        if (!filtroTitulo.isEmpty()) {
            stmt.setString(paramIndex++, "%" + filtroTitulo + "%");
        }
        if (!filtroAutor.isEmpty()) {
            stmt.setString(paramIndex++, "%" + filtroAutor + "%");
        }
        if (!filtroCategoria.isEmpty()) {
            stmt.setString(paramIndex++, "%" + filtroCategoria + "%");
        }
         if (!filtroPreco.isEmpty()) {
                try {
                    stmt.setDouble(paramIndex++, Double.parseDouble(filtroPreco.replace(",", ".")));
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Preço inválido.");
                    return;
            }
        }


            ResultSet rs = stmt.executeQuery();
            DefaultTableModel modelo = (DefaultTableModel) tblLivros.getModel();
            modelo.setRowCount(0); // limpa tabela

            while (rs.next()) {
    int id = rs.getInt("id");
    String titulo = rs.getString("titulo");
    String autor = rs.getString("autor");
    String categoria = rs.getString("categoria");
    double preco = rs.getDouble("preco");

    modelo.addRow(new Object[]{id, titulo, autor, categoria, preco});
            }

            conexao.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao consultar livros: " + e.getMessage());
        }
        
    
}
    
    public void carregarLivros() {
    DefaultTableModel modelo = (DefaultTableModel) tblLivros.getModel();
    modelo.setRowCount(0); // limpa a tabela

    try {
        Connection conexao = ConexaoMySQL.getConexao();
       String sql = "SELECT id, titulo, autor, genero AS categoria, preco FROM livro";
        PreparedStatement stmt = conexao.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();

        while (rs.next()) {
            int id = rs.getInt("id");
            String titulo = rs.getString("titulo");
            String autor = rs.getString("autor");
            String categoria = rs.getString("categoria");
            double preco = rs.getDouble("preco");

modelo.addRow(new Object[]{id, titulo, autor, categoria, preco});
        }

        conexao.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Erro ao carregar livros: " + ex.getMessage());
    }
}
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnTelaInicialConsulta = new javax.swing.JButton();
        bntCadastroConsulta = new javax.swing.JButton();
        btnConsultaConsulta = new javax.swing.JButton();
        bntSairConsulta = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        txtAutor = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();
        txtPrecoMaximo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLivros = new javax.swing.JTable();
        bntBuscarConsulta = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        btnTelaInicialConsulta.setText("Tela Inicial");
        btnTelaInicialConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaInicialConsultaActionPerformed(evt);
            }
        });

        bntCadastroConsulta.setText("Cadastro de Livros");
        bntCadastroConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCadastroConsultaActionPerformed(evt);
            }
        });

        btnConsultaConsulta.setText("Consulta de Livros");
        btnConsultaConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaConsultaActionPerformed(evt);
            }
        });

        bntSairConsulta.setText("Sair");
        bntSairConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSairConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bntSairConsulta)
                    .addComponent(btnConsultaConsulta)
                    .addComponent(btnTelaInicialConsulta)
                    .addComponent(bntCadastroConsulta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnTelaInicialConsulta)
                .addGap(27, 27, 27)
                .addComponent(bntCadastroConsulta)
                .addGap(18, 18, 18)
                .addComponent(btnConsultaConsulta)
                .addGap(18, 18, 18)
                .addComponent(bntSairConsulta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Consulta de Livros");

        jLabel2.setText("Titulo do Livro:");

        jLabel3.setText("Autor:");

        jLabel4.setText("Categoria:");

        jLabel5.setText("Preço Maximo:");

        tblLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblLivros);

        bntBuscarConsulta.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bntBuscarConsulta.setText("Buscar");
        bntBuscarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntBuscarConsultaActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(23, 23, 23)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(txtPrecoMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(bntBuscarConsulta)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnEditar)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnExcluir)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(238, 238, 238))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecoMaximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntBuscarConsulta)
                            .addComponent(btnEditar)
                            .addComponent(btnExcluir))
                        .addContainerGap(25, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTelaInicialConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaInicialConsultaActionPerformed
        new MenuPrincipalView().setVisible(true);
this.dispose();
    }//GEN-LAST:event_btnTelaInicialConsultaActionPerformed

    private void bntCadastroConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCadastroConsultaActionPerformed
        new CadastroLivrosView().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bntCadastroConsultaActionPerformed

    private void btnConsultaConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaConsultaActionPerformed
        new ConsultaLivrosView().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnConsultaConsultaActionPerformed

    private void bntSairConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSairConsultaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bntSairConsultaActionPerformed

    private void bntBuscarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntBuscarConsultaActionPerformed
    String filtroTitulo = txtTitulo.getText();
        String filtroAutor = txtAutor.getText();
        String filtroCategoria = txtCategoria.getText();
        String filtroPreco = txtPrecoMaximo.getText();

        consultarLivrosNoBanco(filtroTitulo, filtroAutor, filtroCategoria, filtroPreco);
    
    

    }//GEN-LAST:event_bntBuscarConsultaActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
 
        int linhaSelecionada = tblLivros.getSelectedRow();

        if (linhaSelecionada != -1) {
            // Pega o ID do livro (coluna 0 da tabela)
            int id = (int) tblLivros.getValueAt(linhaSelecionada, 0);

            // Pega os dados atuais da linha
            String tituloAtual = tblLivros.getValueAt(linhaSelecionada, 1).toString();
            String autorAtual = tblLivros.getValueAt(linhaSelecionada, 2).toString();
            String generoAtual = tblLivros.getValueAt(linhaSelecionada, 3).toString();
            String precoAtual = tblLivros.getValueAt(linhaSelecionada, 4).toString();

            // Caixas de diálogo para editar os campos
            String novoTitulo = JOptionPane.showInputDialog(null, "Editar Título:", tituloAtual);
            String novoAutor = JOptionPane.showInputDialog(null, "Editar Autor:", autorAtual);
            String novoGenero = JOptionPane.showInputDialog(null, "Editar Gênero:", generoAtual);
            String novoPreco = JOptionPane.showInputDialog(null, "Editar Preço:", precoAtual);
            
            
             // Atualiza no banco
              if (novoTitulo != null && novoAutor != null && novoGenero != null && novoPreco != null) 
            try {
                Connection conexao = ConexaoMySQL.getConexao();
                String sql = "UPDATE livro SET titulo=?, autor=?, genero=?, preco=? WHERE id=?";
                PreparedStatement stmt = conexao.prepareStatement(sql);
                stmt.setString(1, novoTitulo);
                stmt.setString(2, novoAutor);
                stmt.setString(3, novoGenero);
                stmt.setDouble(4, Double.parseDouble(novoPreco));
                stmt.setInt(5, id); // ID da linha

                stmt.executeUpdate();
                conexao.close();
                JOptionPane.showMessageDialog(null, "Livro atualizado com sucesso!");
                carregarLivros(); // método para recarregar a tabela

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar livro: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um livro para editar.");
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
     int linhaSelecionada = tblLivros.getSelectedRow();
if (linhaSelecionada != -1) {
    int idLivro = Integer.parseInt(tblLivros.getValueAt(linhaSelecionada, 0).toString());
    
    int confirmacao = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir este livro?", "Confirmação", JOptionPane.YES_NO_OPTION);
    
    if (confirmacao == JOptionPane.YES_OPTION) {
        try (Connection conexao = ConexaoMySQL.getConexao()) {
            String sql = "DELETE FROM livro WHERE id = ?";
            PreparedStatement pst = conexao.prepareStatement(sql);
            pst.setInt(1, idLivro);
            
            pst.executeUpdate(); // <-- CORRETO
            
            JOptionPane.showMessageDialog(null, "Livro excluído com sucesso!");
            
            consultarLivrosNoBanco("", "", "", "");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir livro: " + e.getMessage());
        }
    }
} else {
    JOptionPane.showMessageDialog(null, "Selecione um livro para excluir.");
}
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
         java.awt.EventQueue.invokeLater(() -> {
            new ConsultaLivrosView().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntBuscarConsulta;
    private javax.swing.JButton bntCadastroConsulta;
    private javax.swing.JButton bntSairConsulta;
    private javax.swing.JButton btnConsultaConsulta;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnTelaInicialConsulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblLivros;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtPrecoMaximo;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
